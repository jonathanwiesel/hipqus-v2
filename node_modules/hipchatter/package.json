{
  "author": {
    "name": "Charlton Roberts"
  },
  "name": "hipchatter",
  "description": "Wrapper for the HipChat API (v2)",
  "version": "0.0.8",
  "keywords": [
    "hipchat",
    "hip",
    "chat",
    "hip",
    "atlassian",
    "hipchatter",
    "api"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/charltoons/hipchatter.git"
  },
  "main": "hipchatter.js",
  "dependencies": {
    "needle": "~0.6.3",
    "async": "~0.2.9"
  },
  "engines": {
    "node": "*"
  },
  "devDependencies": {
    "mocha": "~1.14.0",
    "chai": "~1.8.1",
    "colors": "~0.6.2",
    "grunt": "~0.4.1",
    "grunt-execute": "~0.1.5"
  },
  "readme": "HipChatter\n=============\n\n**Node.js wrapper for the HipChat API (v2)**\n\nSee the full HipChat API v2 Documentation at [https://www.hipchat.com/docs/apiv2](https://www.hipchat.com/docs/apiv2)\n\nYou can generate an API token by going to [https://hipchat.com/account/api](https://hipchat.com/account/api). You must have admin access.\n\nSource is available at [http://github.com/charltoons/hipchatter.git](http://github.com/charltoons/hipchatter.git). Pull requests welcome!\n\nNote: This is a work-in-progress, and will improve over time.\n\n[![NPM](https://nodei.co/npm/hipchatter.png?downloads=true)](https://nodei.co/npm/hipchatter/)\n\nHow to Install\n--------------\nIn your project folder:\n\n    npm install hipchatter --save\n    \nIn your project's js file:\n\n    var Hipchatter = require('hipchatter');\n    var hipchatter = new Hipchatter(your_auth_token);\n    \n    // this will list all of your rooms\n    hipchatter.rooms(function(err, rooms){\n        if(!err) console.log(rooms)\n    });\n\nUsage\n----\n    hipchatter.<endpoint>( params, callback(err, response){\n        console.log(response);\n    });\n\n- `<endpoint>` is the hipchatter function you are using.\n- `params` are the parameter requiree by the function\n- `err` will be true if there's an error, null if there's not\n- `response` the direct response from the HipChat API (JSON)\n\nDocumentation\n-------------\n\n### hipchatter.rooms\nReturns all of the rooms you have access to.\n\n**Parameters:** None \n\n**Results:** `err`, array of rooms)\n#### Usage\n\n    hipchatter.rooms(function(err, rooms){\n        console.log(rooms);\n    });\n\n### hipchatter.history\nThe history of one room.\n\n**Parameters:** `room` (string) — the room name or id\n\n**Results:** `err`, history (object) — the history object, the messages are in history.items (array)\n#### Usage\n\n    hipchatter.history('Hipchatter Room', function(err, history){\n        // print the last message\n        console.log(history.items[items.length-1].message);\n    }\n\n### hipchatter.notify\nSend a room notification.\n\n**Parameters:**\n\n- `room` (string) — the room name or id\n- `options` (object)\n    - **message** (string) - Required. Message to be sent\n    - **token** (string) - Required. The Room notification auth token. You can generate one by going to HipChat.com > Rooms tab > Click the room you want > Select Tokens [BETA] on the left-hand side > generate a new token\n    - **color** (string) - yellow (default), red, green, purple, gray, random\n    - **message_format** - html (default), text\n    - **notify** (boolean) - false (default), true\n\n**Results:** `err`, `err_response`\n\n#### Usage\n\n    hipchatter.notify('Hipchatter Room', \n        {\n            message: 'Hello World',\n            color: 'green',\n            token: '<room notification token>'\n        }, function(err){\n            if (err == null) console.log('Successfully notified the room.');\n    });\n    \n### hipchatter.create_webhook\nCreate a webhook for HipChat to ping when a certain event happens in a room.\n\n**Parameters:**\n\n- `room` (string) — the room name or id\n- `options` (object)\n    - **url** - for HipChat to ping\n    - **pattern** - regex to match message against\n    - **event** - the event to listen for.\n        - Valid values: `room_message`, `room_notification`, `room_exit`, `room_enter`, `room_topic_change`\n    - **name** - name for this webhook\n\n**Results:** `err`, `err_response`\n\n#### Usage\n\n    hipchatter.create_webhook('Hipchatter Room', \n        {\n            url: 'http://yourdomain.com',\n            event: 'room_message'\n        }, function(err){\n            if (err == null) console.log('Successfully created webhook.');\n    });\n\n### hipchatter.get_webhook\nGet the details of a sepcific webhook.\n\n**Parameters:**\n\n- `room` (string) — the room name or id\n- `webhook_id` (string) - the id for the webhook that was returned from `create_webhook`\n\n**Results:** `err`, `webhook_info`\n\n#### Usage\n\n    hipchatter.get_webhook('Hipchatter Room', '12345', function(err, hook){\n            console.log(hook);\n    });\n\n### hipchatter.webhooks\nGet all webhooks for a room.\n\n**Parameters:** `room` (string) — the room name or id\n\n**Results:** `err`, `webhooks` (array)\n\n#### Usage\n\n    hipchatter.webhooks('Hipchatter Room', function(err, hooks){\n        console.log(hooks);\n    });\n\n### hipchatter.delete_webhook\nRemove a webhook.\n\n**Parameters:**\n\n- `room` (string) — the room name or id\n- `options` (object)\n    - **url** - for HipChat to ping\n    - **pattern** - regex to match message against\n    - **event** - the event to listen for.\n        - Valid values: `room_message`, `room_notification`, `room_exit`, `room_enter`, `room_topic_change`\n    - **name** - name for this webhook\n\n**Results:** `err`, `err_response`\n\n#### Usage\n\n    hipchatter.create_webhook('Hipchatter Room', \n        {\n            url: 'http://yourdomain.com',\n            event: 'room_message'\n        }, function(err){\n            if (err == null) console.log('Successfully created webhook.');\n    });\n\n### hipchatter.delete\\_all_webhooks\nCreate a webhook for HipChat to ping when a certain event happens in a room.\n\n**Parameters:**\n\n- **room** (string) — the room name or id\n- **options** (object)\n    - **url** - for HipChat to ping\n    - **pattern** - regex to match message against\n    - **event** - the event to listen for.\n        - Valid values: `room_message`, `room_notification`, `room_exit`, `room_enter`, `room_topic_change`\n    - **name** - name for this webhook\n\n**Results:** `err`, `err_response`\n\n#### Usage\n\n    hipchatter.create_webhook('Hipchatter Room', \n        {\n            url: 'http://yourdomain.com',\n            event: 'room_message'\n        }, function(err){\n            if (err == null) console.log('Successfully created webhook.');\n    });\n\n\nHow to Test\n-----------\n- Clone this repo\n- Copy `/test/settings.example.json` to `/test/settings.json`\n- Fill out your creds\n- Then:\n\n    `npm install\n    mocha -t 5000`",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/charltoons/hipchatter/issues"
  },
  "homepage": "https://github.com/charltoons/hipchatter",
  "_id": "hipchatter@0.0.8",
  "_from": "hipchatter@0.0.8"
}
